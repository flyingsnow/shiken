doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
    link(rel='stylesheet', href='/stylesheets/css/bootstrap.min.css')
    script(src= '/javascripts/jquery-1.11.3.js')
    link(rel="stylesheet",href="/stylesheets/css/flatpickr.min.css")
    script(src="/javascripts/flatpickr.min.js")

    link( href='/fullcalendar-scheduler-1.6.2/lib/fullcalendar.min.css', rel='stylesheet')
    link(href='/fullcalendar-scheduler-1.6.2/lib/fullcalendar.print.min.css' rel='stylesheet' media='print')
    script(src='/fullcalendar-scheduler-1.6.2/lib/moment.min.js')
    script(src='/fullcalendar-scheduler-1.6.2/lib/fullcalendar.min.js')
    script(src='/fullcalendar-scheduler-1.6.2/scheduler.min.js')
    block scripts
    script(type="text/javascript").
      function initFlatpickr() {
          list_results();

          flatpickr("#startTime", {
              enableTime: true,
              enableSeconds: false, // disabled by default
              // noCalendar: true,
              minDate: "today",
              time_24hr: false, // AM/PM time picker is used by default
              // default format
              // dateFormat: "H:i", 
                // initial values for time. don't use these to preload a date
              defaultHour: 9,
              defaultMinute: 0
              // Preload time with defaultDate instead:
              // defaultDate: "3:30"
          });

          flatpickr("#endTime", {
              enableTime: true,
              enableSeconds: false, // disabled by default
              // noCalendar: true,
              minDate: "today",
              time_24hr: false, // AM/PM time picker is used by default
              // default format
              // dateFormat: "H:i", 
              // initial values for time. don't use these to preload a date
              defaultHour: 17,
              defaultMinute: 30
              // Preload time with defaultDate instead:
              // defaultDate: "3:30"
          });

          flatpickr("#selectDate", {
            onChange: function(selectedDates, dateStr, instance) {
                 console.log(dateStr);
               $.post("/list", {"dateStr": dateStr}, function(data) {
                 console.log(data);
                 list_results();
               });
             },

            // minDate: "today",
            defaultDate: "today"
         });
      }

      function updateSelectNo() {
        // setDateTime();
          $("#outputheader").text = '';
      }

      const kyo = new Date()
      // $(function() { // document ready
      function list_results() { // document ready
        $('#calendar').fullCalendar({
          schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
          defaultView: 'agendaDay',
          // defaultDate: '2017-05-07',
          defaultDate: kyo,
          // editable: true,
          // selectable: true,
          eventLimit: true, // allow "more" link when too many events
          header: {
            left: 'prev,next today',
            center: 'title',
            // right: 'agendaDay,agendaTwoDay,agendaWeek,month'
            right: 'agendaDay,agendaTwoDay'
          },
          views: {
            agendaTwoDay: {
              type: 'agenda',
              duration: { days: 2 },

              // views that are more than a day will NOT do this behavior by default
              // so, we need to explicitly enable it
              groupByResource: true

              //// uncomment this line to group by day FIRST with resources underneath
              //groupByDateAndResource: true
            }
          },

          //// uncomment this line to hide the all-day slot
          //allDaySlot: false,

          resources: [
            { id: '1', title: '负载实验机 1', eventColor: '#378006'},
            { id: '2', title: '负载实验机 2', eventColor: 'green' },
            { id: '3', title: '负载实验机 3', eventColor: 'orange' },
            { id: '4', title: '负载实验机 4', eventColor: 'red' },
            { id: '5', title: '负载实验机 5', eventColor: 'green'},
            { id: '6', title: '负载实验机 6', eventColor: 'green' },
            { id: '7', title: '负载实验机 7', eventColor: 'orange' },
            { id: '8', title: '负载实验机 8', eventColor: 'red' }
          ],

          events: {
            url: 'events.json',
            error: function() {
              $('#script-warning').show();
            }
          },
          // events: [
          //   { id: '1', resourceId: '1', start: '2017-07-18', end: '2017-07-19', title: 'event 1' },
          //   { id: '2', resourceId: '2', start: '2017-07-18T09:00:00', end: '2017-07-18T14:00:00', title: 'event 2' },
          //   { id: '3', resourceId: '3', start: '2017-07-18T12:00:00', end: '2017-07-18T06:00:00', title: 'event 3' },
          //   { id: '4', resourceId: '4', start: '2017-07-18T07:30:00', end: '2017-07-18T09:30:00', title: 'event 4' },
          //   { id: '7', resourceId: '5', start: '2017-07-18T10:00:00', end: '2017-07-18T17:00:00', title: 'event 7' }
          // ],

          select: function(start, end, jsEvent, view, resource) {
            console.log(
              'select',
              start.format(),
              end.format(),
              resource ? resource.id : '(no resource)'
            );
          },
          dayClick: function(date, jsEvent, view, resource) {
            console.log(
              'dayClick',
              date.format(),
              resource ? resource.id : '(no resource)'
            );
          }
        });

      }
      // );


      function appointment() {
        var appointmentInfo= new Object();

        appointmentInfo.equipmentNo= parseInt($("#equipmentNo").val());
        appointmentInfo.startDateTime= new Date($("#startTime").val());
        appointmentInfo.endDateTime= new Date($("#endTime").val());;

        $.post("/makeappointment", appointmentInfo, function(data) {
            $('#calendar').fullCalendar('render');
          //  $('#calendar').fullCalendar('updateEvent', events);
            $("#outputheader").text(data);
        },"text");
      }

  body(onload="initFlatpickr()")
      p 实验台 ：
            - equipmentNo = [1, 2, 3, 4, 5, 6, 7, 8]
            select.selectpicker(onchange= "updateSelectNo(this)")#equipmentNo
                each val in  equipmentNo
                    option( value= val) #{val}
      p 开始时间
      input#startTime(class='faltpickr', type='text',placeholder='Select start time')
      p 结束时间
      input#endTime(class='faltpickr', type='text',placeholder='Select end time')
      p
      - var classes = ['btn', 'btn-primary']
      a(class=classes onclick= 'appointment()') make an appointment 

      h4#outputheader

      //h3#title  预约查询,请选择日期
      //input#selectDate(class='faltpickr flatpickr-input active', type='text',placeholder='Select start time')

      //ul
      //  each val,index in  results_str
      //    li
       //     h4= '预约: ' + index + 'user : ' + val.user + '实验台: ' + val.equipmentNo + '开始时间: ' + val.startDateTime + '结束时间: ' + val.endDateTime

  div#calendar
